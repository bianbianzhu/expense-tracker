{"version":3,"sources":["components/UI/card/cardDefault/CardDefault.js","components/totalSection/totalCard/TotalCard.js","components/totalSection/TotalSection.js","components/UI/checkbox/CheckBox.js","components/expenseSection/expenseTable/expenseTableItem/ExpenseTableItem.js","components/expenseSection/expenseTable/ExpenseTable.js","components/expenseSection/ExpenseSection.js","components/addExpenseSection/newExpense/NewExpense.js","components/addExpenseSection/AddExpenseSection.js","pages/DashboardPage.js","App.js","reportWebVitals.js","index.js"],"names":["CardDefault","props","classList","className","children","TotalCard","cardValue","cardTitle","cardValueRaw","value","toLocaleString","console","log","style","TotalSection","total","keys","Object","map","el","index","CheckBox","checkbox_id","type","id","htmlFor","ExpenseTableItem","name","date","Date","toLocaleDateString","day","month","year","amount","toString","ExpenseList","expenses","expense","ExpenseSection","NewExpense","useState","inputNewExpense","setInputNewExpense","inputChangeHandler","e","target","preState","newExpense","onSubmit","preventDefault","onSaveNewExpense","placeholder","onChange","min","step","AddExpenseSection","DashboardPage","fetchedTotal","income","fetchedExpenses","App","undefined","setTotal","setExpenses","setNewEpense","useEffect","inputNewExpenseData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.23558287.chunk.js","sourcesContent":["import React from 'react';\r\nimport './CardDefault.scss';\r\n\r\nconst CardDefault = (props) => {\r\n\r\n    const classList = 'card-default ' + props.className;\r\n\r\n    return (\r\n        <div className={classList}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardDefault;","import React from \"react\";\r\nimport \"./TotalCard.scss\";\r\nimport CardDefault from \"../../UI/card/cardDefault/CardDefault\";\r\nimport { ImArrowUp, ImArrowDown } from \"react-icons/im\";\r\n\r\nconst TotalCard = (props) => {\r\n  const cardTitle = props.cardTitle;\r\n  const cardValueRaw = props.value;\r\n\r\n  let cardValue;\r\n\r\n  if (typeof cardValueRaw === \"number\") {\r\n    cardValue = cardValueRaw.toLocaleString(\"en-AU\");\r\n  } else {\r\n    console.log(\"card value is not a number\");\r\n  }\r\n\r\n  return (\r\n    <CardDefault className=\"total-card\">\r\n      <div className=\"total-card__content\">\r\n        <h3 className=\"total-card__title\">{cardTitle}</h3>\r\n        <p className=\"total-card__value\">{cardValue}</p>\r\n      </div>\r\n      <div className=\"total-card__graph\">\r\n        {cardValueRaw >= 300000 && <ImArrowUp style={{ \"--arrow-color\": \"green\" }} />}\r\n        {cardValueRaw <= 300000 && <ImArrowDown style={{ \"--arrow-color\": \"red\" }} />}\r\n      </div>\r\n    </CardDefault>\r\n  );\r\n};\r\n\r\nexport default TotalCard;\r\n","import React from \"react\";\r\nimport TotalCard from \"./totalCard/TotalCard\";\r\nimport \"./TotalSection.scss\";\r\n\r\nconst TotalSection = (props) => {\r\n  const total = { ...props.total };\r\n  const keys = Object.keys(total);\r\n\r\n  return (\r\n    <section className=\"total-section\">\r\n      {keys.map((el, index) => {\r\n        return <TotalCard cardTitle={el} value={total[el]} key={index} />;\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TotalSection;\r\n","import React from 'react';\r\nimport './CheckBox.scss'\r\n\r\nconst CheckBox = (props) => {\r\n    \r\n    let checkbox_id;\r\n\r\n    if (props.checkbox_id) {\r\n        checkbox_id = props.checkbox_id;\r\n    } else {\r\n        console.log('checkbox needs an id to be linked with label');\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <input type=\"checkbox\" id={checkbox_id}/>\r\n         <label htmlFor={checkbox_id} className=\"checkbox__box\"></label>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CheckBox;","import React from \"react\";\r\nimport \"./ExpenseTableItem.scss\";\r\nimport { RiEdit2Fill, RiDeleteBin4Fill } from \"react-icons/ri\";\r\nimport CheckBox from \"../../../UI/checkbox/CheckBox\";\r\n\r\nconst ExpenseTableItem = (props) => {\r\n\r\n  const name = props.name;\r\n  const date = new Date(props.date).toLocaleDateString('en-AU', {\r\n      day: '2-digit', month: 'short', year:'2-digit'\r\n  });\r\n  const amount = props.amount;\r\n\r\n  const checkbox_id = props.checkbox_id.toString(); // number 0 cannot be a key????\r\n\r\n  console.log(name);\r\n  console.log(date);\r\n  console.log(amount);\r\n\r\n  return (\r\n    <tr className=\"expenseTable-item\">\r\n      <td>\r\n        <CheckBox checkbox_id={checkbox_id} />\r\n      </td>\r\n      <td className=\"expenseTable-item__name\">{name}</td>\r\n      <td className=\"expenseTable-item__date\">{date}</td>\r\n      <td className=\"expenseTable-item__amount\">{amount}</td>\r\n      <td className=\"expenseTable-item__actions-wrapper\">\r\n        <div className=\"expenseTable-item__actions\">\r\n          <button className=\"btn btn--icon\">\r\n            <RiEdit2Fill />\r\n          </button>\r\n          <button className=\"btn btn--icon\">\r\n            <RiDeleteBin4Fill />\r\n          </button>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ExpenseTableItem;\r\n","import React from \"react\";\r\nimport CheckBox from \"../../UI/checkbox/CheckBox\";\r\nimport \"./ExpenseTable.scss\";\r\nimport ExpenseTableItem from \"./expenseTableItem/ExpenseTableItem\";\r\n\r\nconst ExpenseList = (props) => {\r\n  const expenses = [ ...props.expenses ];\r\n\r\n  return (\r\n    <table className=\"expense-table\">\r\n      <tbody>\r\n        <tr className=\"expense-table__header-row\">\r\n          <th>\r\n            <CheckBox checkbox_id=\"name-filter\" />\r\n          </th>\r\n          <th>\r\n            name\r\n            <select name=\"name-sequence\" className=\"dropdown\">\r\n              <option value=\"\"></option>\r\n              <option value=\"a-z\">A-Z</option>\r\n              <option value=\"z-a\">Z-A</option>\r\n            </select>\r\n          </th>\r\n          <th>date</th>\r\n          <th>amount</th>\r\n        </tr>\r\n        {expenses.map((expense, index) => {\r\n          return <ExpenseTableItem key={index} name={expense.name} date={expense.date} amount={expense.amount} checkbox_id={index}/>;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\nimport ExpenseTable from \"./expenseTable/ExpenseTable\";\r\nimport \"./ExpenseSection.scss\";\r\n\r\nconst ExpenseSection = (props) => {\r\n\r\n  const expenses = [...props.expenses];\r\n  \r\n\r\n\r\n  return (\r\n    <section className=\"expense-section\">\r\n      <div className=\"expense-section__nav\">\r\n        <h2 className=\"expense-section__title\">Expenses</h2>\r\n        <button className=\"btn btn--dots expense-section__btn\">...</button>\r\n      </div>\r\n      <ExpenseTable expenses={expenses}/>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ExpenseSection;\r\n","import React from \"react\";\r\nimport CardDefault from \"../../UI/card/cardDefault/CardDefault\";\r\nimport \"./NewExpense.scss\";\r\nimport { RiAddCircleFill } from \"react-icons/ri\";\r\nimport { useState } from \"react/cjs/react.development\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [inputNewExpense, setInputNewExpense] = useState({\r\n    name: '',\r\n    date: '2021-01-02',\r\n    amount: 0,\r\n  });\r\n  //////////////\r\n\r\n  const inputChangeHandler = (e) => {\r\n    if (e.target.name === \"name\") {\r\n      setInputNewExpense((preState) => {\r\n        return { ...preState, name: e.target.value };\r\n      });\r\n    }\r\n\r\n    if (e.target.name === \"date\") {\r\n        setInputNewExpense((preState) => {\r\n            return {\r\n                ...preState,\r\n                date: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    if (e.target.name === \"amount\") {\r\n        setInputNewExpense((preState) => {\r\n            return {\r\n                ...preState,\r\n                amount: e.target.value\r\n            }\r\n        })\r\n    }\r\n  };\r\n\r\n//   console.log(inputNewExpense);\r\n\r\nconsole.log('low');\r\nconsole.log(props.newExpense);\r\n\r\nconst submitFormHandler = (e) => {\r\n   e.preventDefault();\r\n   props.onSaveNewExpense({...inputNewExpense});\r\n\r\n   setInputNewExpense({\r\n       name: \"\",\r\n       date:\"2021-01-01\",\r\n       amount: 0\r\n   })\r\n}\r\n\r\n  return (\r\n    <CardDefault className=\"new-expense\">\r\n      <form onSubmit={submitFormHandler}>\r\n        <label htmlFor=\"new-expense-name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"new-expense-name\"\r\n          className=\"input--expense\"\r\n          placeholder=\"Please enter a name\"\r\n          onChange={inputChangeHandler}\r\n          name=\"name\"\r\n          value={inputNewExpense.name}\r\n        />\r\n        <label htmlFor=\"new-expense-date\">Date</label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"new-expense-date\"\r\n          className=\"input--expense\"\r\n          onChange={inputChangeHandler}\r\n          name=\"date\"\r\n          value={inputNewExpense.date}\r\n        />\r\n        <label htmlFor=\"new-expense-amount\">Amount</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"new-expense-amount\"\r\n          className=\"input--expense\"\r\n          min=\"0.01\"\r\n          step=\"0.01\"\r\n          placeholder=\"Please enter an amount\"\r\n          name=\"amount\"\r\n          onChange={inputChangeHandler}\r\n          value={inputNewExpense.amount}\r\n        />\r\n        <div className=\"new-expense__actions\">\r\n          <button className=\"btn btn--add\">\r\n            <RiAddCircleFill />\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </CardDefault>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from 'react';\r\nimport './AddExpenseSection.scss';\r\nimport NewExpense from './newExpense/NewExpense';\r\n\r\nconst AddExpenseSection = (props) => {\r\n    return (\r\n        <section className=\"addexpense-section\">\r\n            <NewExpense onSaveNewExpense={props.onSaveNewExpense}\r\n            newExpense={props.newExpense}/>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AddExpenseSection;","import React from 'react';\r\nimport './DashboardPage.scss';\r\nimport TotalSection from '../components/totalSection/TotalSection';\r\nimport ExpenseSection from '../components/expenseSection/ExpenseSection';\r\nimport AddExpenseSection from '../components/addExpenseSection/AddExpenseSection';\r\n\r\nconst DashboardPage = (props) => {\r\n \r\n    const total = {...props.total};\r\n    const expenses = [...props.expenses];\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"dashboard-page\">\r\n            <main>\r\n                <TotalSection total = {total} />\r\n               <h1 className=\"dashboard-page__main-heading\">\r\n                   Dashboard\r\n               </h1>\r\n               <AddExpenseSection onSaveNewExpense={props.onSaveNewExpense}\r\n               newExpense={props.newExpense}/>\r\n               <ExpenseSection expenses = {expenses}/>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardPage;","import { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport DashboardPage from \"./pages/DashboardPage\";\n\nconst fetchedTotal = {\n  income: 402184,\n  expense: 205382,\n};\n\n\nconst fetchedExpenses = [{date: '2021-09-06' , name: 'Woolworths Shopping' ,amount: 199.67 },\n{date: '2021-09-07' , name: 'Adobe Subscription' ,amount: 14.29 },\n{date: '2021-09-08' , name: 'Water Bill' ,amount: 1050.20 },\n{date: '2021-09-08' , name: 'Cat Petting Tax' ,amount: 2.99 }]\n\nfunction App() {\n  ////////////////for total section- pass down///////////////////////////\n  const [total, setTotal] = useState({ income: undefined, expense: undefined });\n ///////////////for expense section- pass down//////////////////////////\n  const [expenses, setExpenses] = useState([]);\n\n  /////////////for add expense section - lift up////////////////////////\n  \n  const [newExpense, setNewEpense] = useState({});\n\n  const saveNewExpenseHandler = (inputNewExpenseData) => {\n      setNewEpense(inputNewExpenseData);\n\n      // setExpenses((preState) => {\n      //   return [...preState, newExpense]\n      // });// it workkkedded?? nope, it can only get the undefined new object\n  }\n\n\n\n  //////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    setTotal(fetchedTotal);\n    setExpenses(fetchedExpenses);\n  }, []);\n\n\n  ////// this will work, it listens to the newExpense, if it changes, the expenses will update\n  useEffect(() => {\n    setExpenses((preState) => {\n        return [...preState, newExpense]\n      });\n  }, [newExpense])\n\n  return (\n    <div className=\"App\">\n      <DashboardPage total={total} expenses={expenses} onSaveNewExpense={saveNewExpenseHandler}\n      newExpense={newExpense}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n     <App />\n   </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}